name: Security veracode policy scan action

inputs:
  channel_id:
    description: 'Slack channel ID to send the results to'
    required: false
    default: 'NO_SLACK'
  VERACODE_API_ID_0:
    description: 'Veracode app ID'
    required: true  
  VERACODE_API_ID_1: 
    description: 'Veracode app ID'
    required: true
  VERACODE_API_ID_2:
    description: 'Veracode app ID'
    required: true
  VERACODE_API_ID_3:
    description: 'Veracode app ID'
    required: true
  VERACODE_API_ID_4:
    description: 'Veracode app ID'
    required: true  
  VERACODE_API_KEY_0:  
    description: 'Veracode app secret'
    required: true  
  VERACODE_API_KEY_1:
    description: 'Veracode app secret'
    required: true
  VERACODE_API_KEY_2:
    description: 'Veracode app secret'
    required: true  
  VERACODE_API_KEY_3:
    description: 'Veracode app secret'
    required: true  
  VERACODE_API_KEY_4:
    description: 'Veracode app secret'
    required: true
  SLACK_BOT_TOKEN:
    description: 'Slack bot token'
    required: true
runs:
  using: composite 
  steps:
  - uses: actions/checkout@v4
  - name: Set up JDK 21
    uses: actions/setup-java@v4
    with:
      java-version: '21'
      distribution: 'temurin'
  - name: prepare assets
    uses: ministryofjustice/hmpps-github-actions/.github/actions/security_veracode_prepare_artifacts@v2 # WORKFLOW_VERSION
  - name: "Download/Extract veracode agent"
    shell: bash
    run: wget https://repo1.maven.org/maven2/com/veracode/vosp/api/wrappers/vosp-api-wrappers-java/22.9.10.3/vosp-api-wrappers-java-22.9.10.3.jar -O VeracodeJavaAPI.jar
  - name: "Upload to Veracode"
    shell: bash
    run: |
        echo "Randomly picking 1 of 5 api keys, to help avoid veracode API rate limits."
        X=$(( RANDOM % 4 ))
        VERACODE_API_ID_X="VERACODE_API_ID_${X}"
        VERACODE_API_KEY_X="VERACODE_API_KEY_${X}"
        VERACODE_API_ID="${!VERACODE_API_ID_X}"
        VERACODE_API_KEY="${!VERACODE_API_KEY_X}"
        echo "Using VERACODE_API_ID_${X} from pool (${VERACODE_API_ID:0:5}...)"
        java -jar VeracodeJavaAPI.jar \
        -vid "${VERACODE_API_ID}" \
        -vkey "${VERACODE_API_KEY}" \
        -teams "${{ inputs.teams }}" \
        -action UploadAndScan \
        -appname ${{ github.event.repository.name }} \
        -createprofile true \
        -deleteincompletescan 2 \
        -version "github_id:${{ github.run_id }} ${{ github.ref_type}}:${{ github.ref_name}} sha:${GITHUB_SHA::7}" \
        -filepath source.zip \
        2>&1 | tee output.txt 
#      continue-on-error: true
    env:
      VERACODE_API_ID_0: ${{ inputs.VERACODE_API_ID_0 }}
      VERACODE_API_ID_1: ${{ inputs.VERACODE_API_ID_1 }}
      VERACODE_API_ID_2: ${{ inputs.VERACODE_API_ID_2 }}
      VERACODE_API_ID_3: ${{ inputs.VERACODE_API_ID_3 }}
      VERACODE_API_ID_4: ${{ inputs.VERACODE_API_ID_4 }}
      VERACODE_API_KEY_0: ${{ inputs.VERACODE_API_KEY_0 }}
      VERACODE_API_KEY_1: ${{ inputs.VERACODE_API_KEY_1 }}
      VERACODE_API_KEY_2: ${{ inputs.VERACODE_API_KEY_2 }}
      VERACODE_API_KEY_3: ${{ inputs.VERACODE_API_KEY_3 }}
      VERACODE_API_KEY_4: ${{ inputs.VERACODE_API_KEY_4 }}
  - uses: actions/upload-artifact@v4
    if: success() 
    with:
      name: veracode-policy-check-${{ github.event.repository.name }}
      path: output.txt
  - name: send a failure slack message
    if: failure()  && inputs.channel_id != 'NO_SLACK'
    uses: ministryofjustice/hmpps-github-actions/.github/actions/slack_failure_results@v2 # WORKFLOW_VERSION
    with:
      SLACK_BOT_TOKEN: ${{ inputs.SLACK_BOT_TOKEN }}
      channel_id: ${{ inputs.channel_id }}
      input_file: output.txt

