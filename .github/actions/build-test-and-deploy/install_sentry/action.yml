name: Install Sentry
description: 'Action to install Sentry'

inputs:
  sentry_org:
    default: ministryofjustice
    required: false
    description: "The organisation into which Sentry is being installed"
  sentry_project:
    required: true
    description: "The project into which Sentry is being installed"
  sentry_environment:
    required: true
    description: "The environment into which Sentry is being installed"
  sentry_create_release:
    default: 'false'
    required: false
    description: "Tell sentry-cli to work out the commits on this release - this should only be done ONCE, ideally when you push to DEV."
  app_version:
    required: true
    description: "The version of the app being deployed"


runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v4
    - uses: docker/setup-qemu-action@v3
    - uses: docker/setup-buildx-action@v3
    - name: Sentry - Setup environment
      shell: bash
      run: |
        export SENTRY_AUTH_TOKEN=${{ secrets.SENTRY_AUTH_TOKEN }}
        export SENTRY_ORG=${{ inputs.sentry_org }}
        export SENTRY_PROJECT=${{ inputs.sentry_project }}
        echo "export SENTRY_ORG=$SENTRY_ORG" >> $BASH_ENV
        echo "export SENTRY_PROJECT=$SENTRY_PROJECT" >> $BASH_ENV
        curl -sL https://sentry.io/get-cli/ | bash
    - name: Create release
      if: ${{ inputs.sentry_create_release == 'true' }}
      shell: bash
      run: |
        sentry-cli releases new ${{ inputs.app_version }} --project ${{ inputs.sentry_project}}
        sentry-cli releases set-commits ${{ inputs.app_version }} --auto
        sentry-cli releases finalize ${{ inputs.app_version }}
    - name: Sentry - Record deployment
      shell: bash
      run: |
        sentry-cli releases deploys ${{ inputs.app_version }} new -e ${{ inputs.sentry_environment }}}
