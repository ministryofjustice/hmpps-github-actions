name: build
description: 'This action runs a Trivy scan of IaC code and notifies if issues are encountered'
inputs:
  scan_dir:
    description: Directory to scan
    required: false
    default: "."
runs:
  using: "composite"
  steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Run Trivy vulnerability scanner in IaC mode
      uses: aquasecurity/trivy-action@0.28.0
      with:
        scan-type: fs
        scanners: 'misconfig, vuln, secret'
        hide-progress: true
        format: 'sarif'
        output: 'trivy-results.sarif'
        exit-code: '1'
        severity: 'CRITICAL,HIGH,MEDIUM'
    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: 'trivy-results.sarif'
    # Upload the trivy results as an artifact for a slack message
    - name: upload trivy artifact
      uses: actions/upload-artifact@v4
      id: trivy-upload-artifact
      with:
        name: trivy-check-${{ github.event.repository.name }}
        path: trivy-results.sarif
      continue-on-error: true
    - name: Prepare Trivy summary
      id: trivy-summary
      shell: bash
      run: |
        formatted_output=$(jq -r '.runs[0].results[] | [.ruleId, .message.text] | @tsv' trivy-results.sarif \
        | sed -e 's/\t/\\t/g' -e 's/\\n/|/g' \
        | awk -F\| '{gsub("Package: ","("); gsub("Severity: ",""); print $1") - "$4}' \
        | awk '{printf "%s\\n", $0}')
        echo "Vulnerability Summary"
        echo "====================="
        echo "${formatted_output}" | sed 's/\\n/\n/g'
        slack_summary="$(echo "${formatted_output}" |  awk '{s=s $0} END {if (length(s) >= 3000) print substr(s, 1, 2997) "..."; else print s}')"
        echo "summary=${slack_summary}" >> $GITHUB_ENV
    - name: Trivy slack notification
      uses: ministryofjustice/hmpps-github-actions/.github/actions/slack_codescan_notification@v2 # WORKFLOW_VERSION
      if: (failure() || steps.trivy-analyse.outcome == 'failure') && inputs.channel_id != 'NO_SLACK'
      with:
        title: "Trivy"
        warningOnly: ${{ steps.trivy-upload.outcome == 'success' }}
        channel_id: ${{ inputs.channel_id}}
        SLACK_BOT_TOKEN: ${{ secrets.HMPPS_SRE_SLACK_BOT_TOKEN }}
        subproject: ${{ inputs.subproject }}
        summary: ${{ inputs.slack_include_summary && env.summary || '' }}
