name: Push a previously built docker image

on:
  workflow_call:
    inputs:
      docker_registry:
        description: Docker registry
        required: true
        type: string
      registry_org:
        description: Docker registry organisation
        required: true
        type: string
      app_version:
        description: App version
        required: true
        type: string
      tag_latest:
        description: Tag docker image as 'latest'
        required: false
        type: boolean
        default: true

    secrets:
      HMPPS_QUAYIO_USER:
        required: false 
      HMPPS_QUAYIO_TOKEN:
        required: false

permissions:
  contents: read
  packages: write

jobs:
  docker_push:
    name: Push docker image
    runs-on: ubuntu-latest
    steps:
      - name: Download docker image
        uses: actions/download-artifact@v4
        with:
          name: build_image
          path: ${{ runner.temp }}

      - name: Load image
        run: |
          docker load --input ${{ runner.temp }}/build_image.tar

      - name: Docker login if Docker registry is quay.io
        if: ${{ inputs.docker_registry  == 'quay.io' }}
        uses: docker/login-action@v3
        with:
          registry: ${{ inputs.docker_registry }}
          username: ${{ secrets.HMPPS_QUAYIO_USER }}
          password: ${{ secrets.HMPPS_QUAYIO_TOKEN }}

      - name: Docker login if Docker registry is ghcr.io
        if: ${{ inputs.docker_registry  == 'ghcr.io' }}
        uses: docker/login-action@v3
        with:
          registry: ${{ inputs.docker_registry }}
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Set image name
        shell: bash
        run: export IMAGE_NAME=${{ inputs.docker_registry }}/${{ inputs.registry_org }}/${{ github.event.repository.name }}

      - name: Push image
        shell: bash
        run: docker push "${IMAGE_NAME}:${{ inputs.app_version }}"

      - name: Push latest tag
        if: ${{ inputs.tag_latest ==  'true' }}
        shell: bash
        run: |
          docker tag "${IMAGE_NAME}:${{ inputs.app_version }}" "${IMAGE_NAME}:latest"
          docker push "${IMAGE_NAME}:latest"
