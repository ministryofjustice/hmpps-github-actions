name: Build and test node

on:
  workflow_call:
    inputs:
      node_version:
        type: string
        required: false
        default: '20.12'

permissions:
  contents: read

jobs:
  node-build:
    name: Run the node build 
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ inputs.node_version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ inputs.node_version }}
        cache: 'npm'
  #Â Caching 
    - name: Cache node modules # from https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/caching-dependencies-to-speed-up-workflows
      id: cache-npm
      uses: actions/cache@v3
      env:
        cache-name: 'npm'
      with:
      # npm cache files are stored in `~/.npm` on Linux/macOS
        path: ~/.npm
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-
    - name: update npm
      shell: bash
      run: |
        sudo npm install -g npm@latest
    - name: restore cache
      uses: actions/cache@v3
      env:
        cache-name: 'npm'
      with:
        path: ~/.npm
        key: v1-npm-deps-${{ hashFiles('**/package-lock.json') }}
        restore-keys: dependency-cache-{{ checksum "package-lock.json" }}
    - name: install dependencies
      shell: bash
      run: |
        npm ci --no-audit
    - name: save cache
      uses: actions/cache@v3
      with:
          path: |
            node_modules/
            ~/.cache
          key: dependency-cache-{{ checksum "package-lock.json" }}
    - name: build npm
      shell: bash
      run: |
        npm run build
    - name: Linter check # Run linter after build because the integration test code depend on compiled typescript...
      shell: bash
      run: | 
        npm run lint
    - name: upload the artifacts
      uses: actions/upload-artifact@v4
      with: 
        name: npm_build_artifacts
        path: |
          node_modules/
          build/
          dist/
          assets/stylesheets/
  node-unit-test:
    name: Run the node unit test
    runs-on: ubuntu-latest
    needs: [node-build]
    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ inputs.node_version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ inputs.node_version }}
    - name: restore cache
      uses: actions/cache@v3
      env:
        cache-name: 'npm'
      with:
        path: ~/.npm
        key: dependency-cache-{{ checksum "package-lock.json" }}
    - name: unit tests
      shell: bash
      run: |
        sudo npm run test:ci
    - name: upload the artifacts
      uses: actions/upload-artifact@v4
      with: 
        name: npm_build_artifacts
        path: test_results/
  integration_test:
    runs-on: ubuntu-latest
    needs: [node-build]
    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ inputs.node_version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ inputs.node_version }}
    - name: download artifacts
      uses: actions/download-artifact@v4
      with:
        name: npm_build_artifacts
        path: ~/app
    # - run:
    #       name: Install missing OS dependency
    #       command: sudo apt-get install libxss1
    - name: restore cache
      uses: actions/cache@v3
      env:
        cache-name: 'npm'
      with:
        path: ~/.npm
        key: dependency-cache-{{ checksum "package-lock.json" }}
    - name: Get wiremock
      shell: bash
      run: |
        curl -o wiremock.jar https://repo1.maven.org/maven2/org/wiremock/wiremock-standalone/3.9.1/wiremock-standalone-3.9.1.jar
    - name: Prepare and run integration tests
      shell: bash
      run: |
        nohup java -jar wiremock.jar --port 9091 &
        nohup npm run start-feature &
        sleep 5
        npm run int-test
    - name: upload results
      uses: actions/upload-artifact@v4
      with: 
        name: npm_build_artifacts
        path: |
          integration-tests/videos/
          integration_tests/screenshots/
