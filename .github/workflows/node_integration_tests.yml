name: Integration tests

on:
  workflow_call:
    inputs:
      npm_script:
        description: 'The main test script to execute with `npm run`'
        required: false
        type: string
        default: 'int-test'
      test_results_artifact_name:
        description: 'Name of uploaded test results artifact; must be unqiue across pipeline (eg. in matrix strategies for parallelised tests)'
        required: false
        type: string
        default: 'npm_integration_test_artifacts'
      node_version_file:
        description: "Passed to setup-node action to specify where to source the version of node from"
        required: false
        type: string
        default: ".nvmrc"
      redis_tag:
        description: 'Optionally, start a redis service with this tag'
        required: false
        type: string

permissions:
  contents: read

jobs:
  integration_test:
    name: ${{ inputs.npm_script == 'int-test' && 'Run the integration tests' || format('Run the integration tests â€“ {0}', inputs.npm_script) }}
    runs-on: ubuntu-latest
    services:
      redis:
        image: ${{ inputs.redis_tag && format('redis:{0}', inputs.redis_tag) || '' }}
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ inputs.node_version_file }}
        uses: actions/setup-node@v4
        with:
          node-version-file: ${{ inputs.node_version_file }}
      - name: download artifacts
        uses: actions/download-artifact@v6
        with:
          name: npm_build_artifacts
      - name: restore cache
        id: restore-cache
        uses: actions/cache/restore@v4
        env:
          cache-name: node-modules
        with:
          path: |
            ./node_modules
            ~/.cache/Cypress
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json', '!**/node_modules/**') }}
      - name: Init testing framework if necessary
        run: npm run int-test-init:ci --if-present
      - name: Get wiremock
        shell: bash
        run: |
          curl -o wiremock.jar https://repo1.maven.org/maven2/org/wiremock/wiremock-standalone/3.9.1/wiremock-standalone-3.9.1.jar
      - name: Prepare and run integration tests
        id: integration-tests
        shell: bash
        run: |
          nohup java -jar wiremock.jar --port 9091 &
          nohup npm run start-feature &
          sleep 5
          npm run ${{ inputs.npm_script }}
      - name: upload results
        if: ${{ !cancelled() }}
        uses: actions/upload-artifact@v5
        with:
          name: ${{ inputs.test_results_artifact_name }}
          path: |
            integration_tests/videos/
            integration_tests/screenshots/
            coverage/
            test_results/
            ctrf/
      - name: publish test report
        if: ${{ !cancelled() && github.event.repository.visibility == 'public' }}
        uses: dorny/test-reporter@v2
        with:
          artifact: ${{ inputs.test_results_artifact_name }}
          name: Test Report
          path: 'test_results/**/*.xml'
          reporter: java-junit
          fail-on-empty: false
          fail-on-error: false
          list-suites: 'failed'
          list-tests: 'failed'
      - name: fail the action if the tests failed
        if: ${{ steps.integration-tests.outcome == 'failure' }}
        uses: actions/github-script@v7
        with:
          script: |
            core.setFailed('Integration tests failed')
