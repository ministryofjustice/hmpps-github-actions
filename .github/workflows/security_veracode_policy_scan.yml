name: Security veracode policy scan

on:
  workflow_call:
    inputs:
      channel_id:
        required: false
        type: string
      teams:
        required: false
        type: string
        default: "hmpps-tech"
        description: "Comma-separated list of team names associated with the specified application.  Validates against the names of existing teams for this account."
    secrets:
      SLACK_BOT_TOKEN:
        description: Slack bot token
        required: true
      VERACODE_API_ID_0:
        description: Veracode app secret
        required: true
      VERACODE_API_ID_1:
        description: Veracode app secret
        required: true
      VERACODE_API_ID_2:
        description: Veracode app secret
        required: true
      VERACODE_API_ID_3:
        description: Veracode app secret
        required: true
      VERACODE_API_ID_4:
        description: Veracode app secret
        required: true
      VERACODE_API_KEY_0:
        description: Veracode app secret
        required: true
      VERACODE_API_KEY_1:
        description: Veracode app secret
        required: true
      VERACODE_API_KEY_2:
        description: Veracode app secret
        required: true
      VERACODE_API_KEY_3:
        description: Veracode app secret
        required: true
      VERACODE_API_KEY_4:
        description: Veracode app secret
        required: true

permissions:
  contents: read

jobs:
  security-veracode-policy-scan:
    name: Security veracode policy scan
    runs-on: ubuntu-latest
    permissions:
      security-events: write
    env:
      docker_image_app_dir: "/app"
      additional_docker_build_args: ""
      jdk_tag: "17.0"
      java_options: "-Xmx1024m -XX:ParallelGCThreads=2 -XX:ConcGCThreads=2 -Djava.util.concurrent.ForkJoinPool.common.parallelism=2 -Dorg.gradle.daemon=false -Dkotlin.compiler.execution.strategy=in-process"

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 21
      uses: actions/setup-java@v3
      with:
        java-version: '21'
        distribution: 'temurin'
    - name: prepare assets
      uses: ministryofjustice/hmpps-github-actions/.github/actions/security_veracode_prepare_artifacts@main
    - name: "Download/Extract veracode agent"
      run: wget https://repo1.maven.org/maven2/com/veracode/vosp/api/wrappers/vosp-api-wrappers-java/22.9.10.3/vosp-api-wrappers-java-22.9.10.3.jar -O VeracodeJavaAPI.jar
    - name: "Upload to Veracode"
      shell: bash
      run: |
          echo "Randomly picking 1 of 5 api keys, to help avoid veracode API rate limits."
          X=$(( RANDOM % 4 ))
          VERACODE_API_ID_X="VERACODE_API_ID_${X}"
          VERACODE_API_KEY_X="VERACODE_API_KEY_${X}"
          VERACODE_API_ID="${!VERACODE_API_ID_X}"
          VERACODE_API_KEY="${!VERACODE_API_KEY_X}"
          echo "Using VERACODE_API_ID_${X} from pool (${VERACODE_API_ID:0:5}...)"
          java -jar VeracodeJavaAPI.jar \
          -vid "${VERACODE_API_ID}" \
          -vkey "${VERACODE_API_KEY}" \
          -teams "${{ inputs.teams }}" \
          -action UploadAndScan \
          -appname ${{ github.event.repository.name }} \
          -createprofile true \
          -deleteincompletescan 2 \
          -version "${{ github.ref}}" \
          -filepath source.zip \
          2>&1 | tee output.txt 
      env:
        VERACODE_API_ID_0: ${{ secrets.VERACODE_API_ID_0 }}
        VERACODE_API_ID_1: ${{ secrets.VERACODE_API_ID_1 }}
        VERACODE_API_ID_2: ${{ secrets.VERACODE_API_ID_2 }}
        VERACODE_API_ID_3: ${{ secrets.VERACODE_API_ID_3 }}
        VERACODE_API_ID_4: ${{ secrets.VERACODE_API_ID_4 }}
        VERACODE_API_KEY_0: ${{ secrets.VERACODE_API_KEY_0 }}
        VERACODE_API_KEY_1: ${{ secrets.VERACODE_API_KEY_1 }}
        VERACODE_API_KEY_2: ${{ secrets.VERACODE_API_KEY_2 }}
        VERACODE_API_KEY_3: ${{ secrets.VERACODE_API_KEY_3 }}
        VERACODE_API_KEY_4: ${{ secrets.VERACODE_API_KEY_4 }}
    - name: process slack message results
      id: slack_message_result
      uses: ministryofjustice/hmpps-github-actions/.github/actions/prepare_slack_message@main          
    - uses: actions/upload-artifact@v3
      if: success() 
      with:
        name: veracode-policy-check-${{ github.event.repository.name }}
        path: output.txt

    - uses: slackapi/slack-github-action@e28cf165c92ffef168d23c5c9000cffc8a25e117 # v1.24.0
      if: failure()
      with:
        channel-id: ${{ inputs.channel_id}}
        payload: |
          {
          "blocks": [
            {
              "type": "context",
              "elements": [
                {
                  "type": "mrkdwn",
                  "text": ":stop: Github Actions ${{ github.action }} ${{ github.action_status }}"
                }
              ]
            },
            {
              "type": "section",
              "text": {
                "type": "mrkdwn",
                "text": "*${{ github.repository }}* failed ${{ github.action }}"
              },
              "accessory": {
                  "type": "button",
                "text": {
                  "type": "plain_text",
                  "text": "View job"
                },
                "url": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|${{ github.workflow }}"
              }
            },
            {
              "type": "context",
              "elements": [
                {
                  "type": "mrkdwn",
                  "text": "Output: ```${{ steps.slack_message_result.outputs.SLACK_TXT }}```"
                }
              ]
            },
            {
              "type": "divider"
            }
          ]
          }
      env:
        SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}