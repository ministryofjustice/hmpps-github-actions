name: Build & push docker image and deploy to environment

on:
  workflow_call:
    inputs:
      environment: 
        description: Environment
        required: true 
        type: string
      app_version:
        description: App version
        required: true 
        type: string

permissions:
  contents: read

jobs:

  deploy_env:
    name: Deploy to ${{ inputs.environment }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    environment: ${{ inputs.environment }}
    steps:
      - uses: actions/checkout@v4
      - uses: azure/setup-kubectl@v4
        id: install
        with:
          version: latest
      - uses: ministryofjustice/hmpps-github-actions/.github/actions/build-test-and-deploy/cloud-platform-deploy@v1 # WORKFLOW_VERSION
        id: deploy
        with:
          environment: ${{ inputs.environment }}
          version: ${{ inputs.app_version }}
          api: https://${{ secrets.KUBE_CLUSTER }}
          cert: ${{ secrets.KUBE_CERT }}
          cluster: ${{ secrets.KUBE_CLUSTER }}
          namespace: ${{ secrets.KUBE_NAMESPACE }}
          token: ${{ secrets.KUBE_TOKEN }}
        continue-on-error: true

      - if: ${{ inputs.environment == 'prod' || inputs.environment == 'production' }} && ${{ vars.PROD_RELEASES_SLACK_CHANNEL != '' }}
        id: prod-slack
        uses: slackapi/slack-github-action@37ebaef184d7626c5f204ab8d3baff4262dd30f0 # v1.27.0
        with:
          channel-id: ${{ vars.PROD_RELEASES_SLACK_CHANNEL }}
          payload: |
              {
                "blocks": [
                  {
                    "type": "section",
                    "text": {
                      "type": "mrkdwn",
                      "text": "*${{ github.event.repository.name }}* version `${{ inputs.app_version }}` deploy to *${{ inputs.environment }}*"
                    },
                    "accessory": {
                      "type": "button",
                      "text": {
                        "type": "plain_text",
                        "text": "View job"
                      },
                      "url": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
                    }
                  },
                  {
                    "type": "context",
                    "elements": [
                      {
                        "type": "mrkdwn",
                        "text": "*Status:* ${{ steps.deploy.outcome }}"
                      }
                    ]
                  }
                ]
              }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.HMPPS_SRE_SLACK_BOT_TOKEN }}

      - if: ${{ inputs.environment != 'prod' && inputs.environment != 'production' }} && ${{ vars.NONPROD_RELEASES_SLACK_CHANNEL != '' }}
        id: nonprod-slack
        uses: slackapi/slack-github-action@37ebaef184d7626c5f204ab8d3baff4262dd30f0 # v1.27.0
        with:
          channel-id: ${{ vars.NONPROD_RELEASES_SLACK_CHANNEL }}
          payload: |
              {
                "blocks": [
                  {
                    "type": "section",
                    "text": {
                      "type": "mrkdwn",
                      "text": "*${{ github.event.repository.name }}* version `${{ inputs.app_version }}` deploy to *${{ inputs.environment }}*"
                    },
                    "accessory": {
                      "type": "button",
                      "text": {
                        "type": "plain_text",
                        "text": "View job"
                      },
                      "url": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
                    }
                  },
                  {
                    "type": "context",
                    "elements": [
                      {
                        "type": "mrkdwn",
                        "text": "*Status:* ${{ steps.deploy.outcome }}"
                      }
                    ]
                  }
                ]
              }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.HMPPS_SRE_SLACK_BOT_TOKEN }}